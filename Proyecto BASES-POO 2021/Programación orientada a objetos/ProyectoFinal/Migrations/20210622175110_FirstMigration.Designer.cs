<<<<<<< HEAD
ï»¿// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoFinal.SQLContext;

namespace ProyectoFinal.Migrations
{
    [DbContext(typeof(FinalProjectContext))]
    [Migration("20210622175110_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProyectoFinal.SQLContext.Appointment", b =>
                {
                    b.Property<DateTime?>("DateAppointment")
                        .HasColumnType("date")
                        .HasColumnName("date_appointment");

                    b.Property<TimeSpan?>("HourAppointment")
                        .HasColumnType("time")
                        .HasColumnName("hour_appointment");

                    b.Property<int?>("IdCabin")
                        .HasColumnType("int")
                        .HasColumnName("id_cabin");

                    b.Property<int?>("IdCitizen")
                        .HasColumnType("int")
                        .HasColumnName("id_citizen");

                    b.HasIndex("IdCabin");

                    b.HasIndex("IdCitizen");

                    b.ToTable("APPOINTMENT");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Cabin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addres")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("addres");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<int?>("IdDepartment")
                        .HasColumnType("int")
                        .HasColumnName("id_department");

                    b.Property<int?>("IdMunicipality")
                        .HasColumnType("int")
                        .HasColumnName("id_municipality");

                    b.Property<string>("ManagerName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("manager_name");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone");

                    b.HasKey("Id");

                    b.HasIndex("IdDepartment");

                    b.HasIndex("IdMunicipality");

                    b.ToTable("CABIN");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Citizen", b =>
                {
                    b.Property<int>("Dui")
                        .HasColumnType("int")
                        .HasColumnName("dui");

                    b.Property<string>("Addres")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("addres");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Fullname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fullname");

                    b.Property<int?>("IdDepartment")
                        .HasColumnType("int")
                        .HasColumnName("id_department");

                    b.Property<int?>("IdMunicipality")
                        .HasColumnType("int")
                        .HasColumnName("id_municipality");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone");

                    b.HasKey("Dui")
                        .HasName("PK__CITIZEN__D876F1BEE69D5D5F");

                    b.HasIndex("IdDepartment");

                    b.HasIndex("IdMunicipality");

                    b.ToTable("CITIZEN");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Department1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("department");

                    b.HasKey("Id");

                    b.ToTable("DEPARTMENT");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Disease", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Diseases")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("diseases");

                    b.Property<int?>("DuiCitizen")
                        .HasColumnType("int")
                        .HasColumnName("dui_citizen");

                    b.HasKey("Id");

                    b.HasIndex("DuiCitizen");

                    b.ToTable("DISEASES");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addres")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("addres");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<int?>("IdManager")
                        .HasColumnType("int")
                        .HasColumnName("id_manager");

                    b.Property<int?>("IdTypeEmployee")
                        .HasColumnType("int")
                        .HasColumnName("id_type_employee");

                    b.HasKey("Id");

                    b.HasIndex("IdManager");

                    b.HasIndex("IdTypeEmployee");

                    b.ToTable("EMPLOYEE");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Manager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PasswordManager")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password_manager");

                    b.Property<string>("UserEmployee")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_employee");

                    b.HasKey("Id");

                    b.ToTable("MANAGER");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Managerxcabin", b =>
                {
                    b.Property<int>("IdManager")
                        .HasColumnType("int")
                        .HasColumnName("id_manager");

                    b.Property<int>("IdCabin")
                        .HasColumnType("int")
                        .HasColumnName("id_cabin");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("date_time");

                    b.HasKey("IdManager", "IdCabin");

                    b.HasIndex("IdCabin");

                    b.ToTable("MANAGERXCABIN");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Municipality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdDepartment")
                        .HasColumnType("int")
                        .HasColumnName("id_department");

                    b.Property<string>("Municipality1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("municipality");

                    b.HasKey("Id");

                    b.HasIndex("IdDepartment");

                    b.ToTable("MUNICIPALITY");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.TypeEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Employee")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("employee");

                    b.HasKey("Id");

                    b.ToTable("TYPE_EMPLOYEE");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Appointment", b =>
                {
                    b.HasOne("ProyectoFinal.SQLContext.Cabin", "IdCabinNavigation")
                        .WithMany()
                        .HasForeignKey("IdCabin")
                        .HasConstraintName("FK_CABIN_APPOINTMENT");

                    b.HasOne("ProyectoFinal.SQLContext.Citizen", "IdCitizenNavigation")
                        .WithMany()
                        .HasForeignKey("IdCitizen")
                        .HasConstraintName("FK_CITIZEN_APPOINTMENT");

                    b.Navigation("IdCabinNavigation");

                    b.Navigation("IdCitizenNavigation");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Cabin", b =>
                {
                    b.HasOne("ProyectoFinal.SQLContext.Department", "IdDepartmentNavigation")
                        .WithMany("Cabins")
                        .HasForeignKey("IdDepartment")
                        .HasConstraintName("FK_DEPARTMENT_CABIN");

                    b.HasOne("ProyectoFinal.SQLContext.Municipality", "IdMunicipalityNavigation")
                        .WithMany("Cabins")
                        .HasForeignKey("IdMunicipality")
                        .HasConstraintName("FK_MUNICIPALITY_CABIN");

                    b.Navigation("IdDepartmentNavigation");

                    b.Navigation("IdMunicipalityNavigation");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Citizen", b =>
                {
                    b.HasOne("ProyectoFinal.SQLContext.Department", "IdDepartmentNavigation")
                        .WithMany("Citizens")
                        .HasForeignKey("IdDepartment")
                        .HasConstraintName("FK_DEPARTMENT_CITIZEN");

                    b.HasOne("ProyectoFinal.SQLContext.Municipality", "IdMunicipalityNavigation")
                        .WithMany("Citizens")
                        .HasForeignKey("IdMunicipality")
                        .HasConstraintName("FK_MUNICIPALITY_CITIZEN");

                    b.Navigation("IdDepartmentNavigation");

                    b.Navigation("IdMunicipalityNavigation");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Disease", b =>
                {
                    b.HasOne("ProyectoFinal.SQLContext.Citizen", "DuiCitizenNavigation")
                        .WithMany("Diseases")
                        .HasForeignKey("DuiCitizen")
                        .HasConstraintName("FK_CITIZEN_DISEASES");

                    b.Navigation("DuiCitizenNavigation");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Employee", b =>
                {
                    b.HasOne("ProyectoFinal.SQLContext.Manager", "IdManagerNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("IdManager")
                        .HasConstraintName("FK_MANAGER_EMPLOYEE");

                    b.HasOne("ProyectoFinal.SQLContext.TypeEmployee", "IdTypeEmployeeNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("IdTypeEmployee")
                        .HasConstraintName("FK_TYPE_EMPLOYEE_EMPLOYEE");

                    b.Navigation("IdManagerNavigation");

                    b.Navigation("IdTypeEmployeeNavigation");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Managerxcabin", b =>
                {
                    b.HasOne("ProyectoFinal.SQLContext.Cabin", "IdCabinNavigation")
                        .WithMany("Managerxcabins")
                        .HasForeignKey("IdCabin")
                        .HasConstraintName("FK_CABIN_MANAGERXCABIN")
                        .IsRequired();

                    b.HasOne("ProyectoFinal.SQLContext.Manager", "IdManagerNavigation")
                        .WithMany("Managerxcabins")
                        .HasForeignKey("IdManager")
                        .HasConstraintName("FK_MANAGER_MANAGERXCABIN")
                        .IsRequired();

                    b.Navigation("IdCabinNavigation");

                    b.Navigation("IdManagerNavigation");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Municipality", b =>
                {
                    b.HasOne("ProyectoFinal.SQLContext.Department", "IdDepartmentNavigation")
                        .WithMany("Municipalities")
                        .HasForeignKey("IdDepartment")
                        .HasConstraintName("FK_DEPARTMENT_MUNICIPALITY");

                    b.Navigation("IdDepartmentNavigation");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Cabin", b =>
                {
                    b.Navigation("Managerxcabins");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Citizen", b =>
                {
                    b.Navigation("Diseases");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Department", b =>
                {
                    b.Navigation("Cabins");

                    b.Navigation("Citizens");

                    b.Navigation("Municipalities");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Manager", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Managerxcabins");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Municipality", b =>
                {
                    b.Navigation("Cabins");

                    b.Navigation("Citizens");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.TypeEmployee", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
=======
ï»¿// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoFinal.SQLContext;

namespace ProyectoFinal.Migrations
{
    [DbContext(typeof(FinalProjectContext))]
    [Migration("20210622175110_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProyectoFinal.SQLContext.Appointment", b =>
                {
                    b.Property<DateTime?>("DateAppointment")
                        .HasColumnType("date")
                        .HasColumnName("date_appointment");

                    b.Property<TimeSpan?>("HourAppointment")
                        .HasColumnType("time")
                        .HasColumnName("hour_appointment");

                    b.Property<int?>("IdCabin")
                        .HasColumnType("int")
                        .HasColumnName("id_cabin");

                    b.Property<int?>("IdCitizen")
                        .HasColumnType("int")
                        .HasColumnName("id_citizen");

                    b.HasIndex("IdCabin");

                    b.HasIndex("IdCitizen");

                    b.ToTable("APPOINTMENT");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Cabin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addres")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("addres");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<int?>("IdDepartment")
                        .HasColumnType("int")
                        .HasColumnName("id_department");

                    b.Property<int?>("IdMunicipality")
                        .HasColumnType("int")
                        .HasColumnName("id_municipality");

                    b.Property<string>("ManagerName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("manager_name");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone");

                    b.HasKey("Id");

                    b.HasIndex("IdDepartment");

                    b.HasIndex("IdMunicipality");

                    b.ToTable("CABIN");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Citizen", b =>
                {
                    b.Property<int>("Dui")
                        .HasColumnType("int")
                        .HasColumnName("dui");

                    b.Property<string>("Addres")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("addres");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Fullname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fullname");

                    b.Property<int?>("IdDepartment")
                        .HasColumnType("int")
                        .HasColumnName("id_department");

                    b.Property<int?>("IdMunicipality")
                        .HasColumnType("int")
                        .HasColumnName("id_municipality");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone");

                    b.HasKey("Dui")
                        .HasName("PK__CITIZEN__D876F1BEE69D5D5F");

                    b.HasIndex("IdDepartment");

                    b.HasIndex("IdMunicipality");

                    b.ToTable("CITIZEN");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Department1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("department");

                    b.HasKey("Id");

                    b.ToTable("DEPARTMENT");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Disease", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Diseases")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("diseases");

                    b.Property<int?>("DuiCitizen")
                        .HasColumnType("int")
                        .HasColumnName("dui_citizen");

                    b.HasKey("Id");

                    b.HasIndex("DuiCitizen");

                    b.ToTable("DISEASES");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addres")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("addres");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<int?>("IdManager")
                        .HasColumnType("int")
                        .HasColumnName("id_manager");

                    b.Property<int?>("IdTypeEmployee")
                        .HasColumnType("int")
                        .HasColumnName("id_type_employee");

                    b.HasKey("Id");

                    b.HasIndex("IdManager");

                    b.HasIndex("IdTypeEmployee");

                    b.ToTable("EMPLOYEE");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Manager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PasswordManager")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password_manager");

                    b.Property<string>("UserEmployee")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_employee");

                    b.HasKey("Id");

                    b.ToTable("MANAGER");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Managerxcabin", b =>
                {
                    b.Property<int>("IdManager")
                        .HasColumnType("int")
                        .HasColumnName("id_manager");

                    b.Property<int>("IdCabin")
                        .HasColumnType("int")
                        .HasColumnName("id_cabin");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("date_time");

                    b.HasKey("IdManager", "IdCabin");

                    b.HasIndex("IdCabin");

                    b.ToTable("MANAGERXCABIN");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Municipality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdDepartment")
                        .HasColumnType("int")
                        .HasColumnName("id_department");

                    b.Property<string>("Municipality1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("municipality");

                    b.HasKey("Id");

                    b.HasIndex("IdDepartment");

                    b.ToTable("MUNICIPALITY");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.TypeEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Employee")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("employee");

                    b.HasKey("Id");

                    b.ToTable("TYPE_EMPLOYEE");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Appointment", b =>
                {
                    b.HasOne("ProyectoFinal.SQLContext.Cabin", "IdCabinNavigation")
                        .WithMany()
                        .HasForeignKey("IdCabin")
                        .HasConstraintName("FK_CABIN_APPOINTMENT");

                    b.HasOne("ProyectoFinal.SQLContext.Citizen", "IdCitizenNavigation")
                        .WithMany()
                        .HasForeignKey("IdCitizen")
                        .HasConstraintName("FK_CITIZEN_APPOINTMENT");

                    b.Navigation("IdCabinNavigation");

                    b.Navigation("IdCitizenNavigation");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Cabin", b =>
                {
                    b.HasOne("ProyectoFinal.SQLContext.Department", "IdDepartmentNavigation")
                        .WithMany("Cabins")
                        .HasForeignKey("IdDepartment")
                        .HasConstraintName("FK_DEPARTMENT_CABIN");

                    b.HasOne("ProyectoFinal.SQLContext.Municipality", "IdMunicipalityNavigation")
                        .WithMany("Cabins")
                        .HasForeignKey("IdMunicipality")
                        .HasConstraintName("FK_MUNICIPALITY_CABIN");

                    b.Navigation("IdDepartmentNavigation");

                    b.Navigation("IdMunicipalityNavigation");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Citizen", b =>
                {
                    b.HasOne("ProyectoFinal.SQLContext.Department", "IdDepartmentNavigation")
                        .WithMany("Citizens")
                        .HasForeignKey("IdDepartment")
                        .HasConstraintName("FK_DEPARTMENT_CITIZEN");

                    b.HasOne("ProyectoFinal.SQLContext.Municipality", "IdMunicipalityNavigation")
                        .WithMany("Citizens")
                        .HasForeignKey("IdMunicipality")
                        .HasConstraintName("FK_MUNICIPALITY_CITIZEN");

                    b.Navigation("IdDepartmentNavigation");

                    b.Navigation("IdMunicipalityNavigation");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Disease", b =>
                {
                    b.HasOne("ProyectoFinal.SQLContext.Citizen", "DuiCitizenNavigation")
                        .WithMany("Diseases")
                        .HasForeignKey("DuiCitizen")
                        .HasConstraintName("FK_CITIZEN_DISEASES");

                    b.Navigation("DuiCitizenNavigation");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Employee", b =>
                {
                    b.HasOne("ProyectoFinal.SQLContext.Manager", "IdManagerNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("IdManager")
                        .HasConstraintName("FK_MANAGER_EMPLOYEE");

                    b.HasOne("ProyectoFinal.SQLContext.TypeEmployee", "IdTypeEmployeeNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("IdTypeEmployee")
                        .HasConstraintName("FK_TYPE_EMPLOYEE_EMPLOYEE");

                    b.Navigation("IdManagerNavigation");

                    b.Navigation("IdTypeEmployeeNavigation");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Managerxcabin", b =>
                {
                    b.HasOne("ProyectoFinal.SQLContext.Cabin", "IdCabinNavigation")
                        .WithMany("Managerxcabins")
                        .HasForeignKey("IdCabin")
                        .HasConstraintName("FK_CABIN_MANAGERXCABIN")
                        .IsRequired();

                    b.HasOne("ProyectoFinal.SQLContext.Manager", "IdManagerNavigation")
                        .WithMany("Managerxcabins")
                        .HasForeignKey("IdManager")
                        .HasConstraintName("FK_MANAGER_MANAGERXCABIN")
                        .IsRequired();

                    b.Navigation("IdCabinNavigation");

                    b.Navigation("IdManagerNavigation");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Municipality", b =>
                {
                    b.HasOne("ProyectoFinal.SQLContext.Department", "IdDepartmentNavigation")
                        .WithMany("Municipalities")
                        .HasForeignKey("IdDepartment")
                        .HasConstraintName("FK_DEPARTMENT_MUNICIPALITY");

                    b.Navigation("IdDepartmentNavigation");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Cabin", b =>
                {
                    b.Navigation("Managerxcabins");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Citizen", b =>
                {
                    b.Navigation("Diseases");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Department", b =>
                {
                    b.Navigation("Cabins");

                    b.Navigation("Citizens");

                    b.Navigation("Municipalities");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Manager", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Managerxcabins");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.Municipality", b =>
                {
                    b.Navigation("Cabins");

                    b.Navigation("Citizens");
                });

            modelBuilder.Entity("ProyectoFinal.SQLContext.TypeEmployee", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
>>>>>>> e196b46f1e90476656035405f5aaf321c39d98dc
